//AutoGenerated Begin
//DO NOT EDIT!
package simx.components.editor.gui

import scala.swing._
import simplex3d.math.floatx.ConstVec2f
import scala.swing.event.ValueChanged

class ConstVec2fSVarSetterGenerator039be9b1d2e541669f4dd62d68327236 extends SVarSetterGenerator[ConstVec2f] {

  def generate: SVarSetter[ConstVec2f] = new SVarSetter[ConstVec2f] {

//AutoGenerated END
//Put your code below

    var x: Float = 0f
    var y: Float = 0f

    val xField =
      new TextField() {
        listenTo(this)
        reactions += {
          case _: scala.swing.event.EditDone =>
            try{
              x = text.toFloat
              setSvar(ConstVec2f(x,y))
            } catch {case _ : Throwable => }
        }
      }

    val yField =
      new TextField() {
        listenTo(this)
        reactions += {
          case _: scala.swing.event.EditDone =>
            try{
              y = text.toFloat
              setSvar(ConstVec2f(x,y))
            } catch {case _ : Throwable => }
        }
      }

    /**
     *  The scala.swing.Component that visualizes the SVar setter.
     *  Call
     *  setSvar(newValue: ConstVec2f): Unit
     *  to set new svar value.
     */
    //Todo: Implement yourself!
    val component = new FlowPanel(new Label("x"), xField, new Label("y"), yField)


//      new Button("Click me to set the svar") {
//      listenTo(this)
//      reactions += {
//        case event: event.ButtonClicked =>
//          Dialog.showMessage(null, "Use 'e' button to edit the code", "Setter not implemented yet")
//
//          /*
//          setSvar(...)
//          */
//      }
//    }

    /**
     * Override update if you want to use the current value of the SVar.
     * This function is initially called once and then every time the value of the SVar changes.
     */
    override def update(newValue: ConstVec2f) {
      x = newValue.x
      y = newValue.y
      xField.text = x.toString
      yField.text = y.toString
    }

  }

  /**
   *  The name of this visualizer.
   *  This must not be unique.
   */
  //Todo: Name it!
  val name: String = "Vec2f Setter"

}