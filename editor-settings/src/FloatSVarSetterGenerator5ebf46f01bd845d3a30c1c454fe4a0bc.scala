//AutoGenerated Begin
//DO NOT EDIT!
package simx.components.editor.gui

import scala.swing._
import scala.swing.event.EditDone
import javax.swing.{JComponent, InputVerifier}
import java.awt.Color

class FloatSVarSetterGenerator5ebf46f01bd845d3a30c1c454fe4a0bc extends SVarSetterGenerator[Float] {

  def generate: SVarSetter[Float] = new SVarSetter[Float] {

//AutoGenerated END
//Put your code below

    /**
     *  The scala.swing.Component that visualizes the SVar setter.
     *  Call
     *  setSvar(newValue: Float): Unit
     *  to set new svar value.
     */
    //Todo: Implement yourself!
    val component = new TextField(){
      listenTo(this)
      peer.setInputVerifier(new InputVerifier {
        override def verify(input: JComponent) = {
          try {
            text.toFloat
            opaque = false
            background = Color.white
            true
          } catch { case e: Throwable =>
            opaque = true
            background = Color.red
            false
          }
        }
      })
      reactions += {
        case event: EditDone =>
          if(text.nonEmpty) setSvar(text.toFloat)
      }
    }

    /**
     * Override update if you want to use the current value of the SVar.
     * This function is initially called once and then every time the value of the SVar changes.
     */
    // override def update(newValue: Float) {}

  }

  /**
   *  The name of this visualizer.
   *  This must not be unique.
   */
  //Todo: Name it!
  val name: String = "Float Setter"

}