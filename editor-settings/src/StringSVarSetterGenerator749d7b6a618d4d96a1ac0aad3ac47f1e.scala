//AutoGenerated Begin
//DO NOT EDIT!
package simx.components.editor.gui

import scala.swing._
import java.lang.String
import scala.swing.event.ValueChanged

class StringSVarSetterGenerator749d7b6a618d4d96a1ac0aad3ac47f1e extends SVarSetterGenerator[String] {

  def generate: SVarSetter[String] = new SVarSetter[String] {

//AutoGenerated END
//Put your code below

    /**
     *  The scala.swing.Component that visualizes the SVar setter.
     *  Call
     *  setSvar(newValue: String): Unit
     *  to set new svar value.
     */
    //Todo: Implement yourself!
    val component = new TextField() {
      listenTo(this)
      reactions += {
        case event: ValueChanged =>
          setSvar(text)
      }
    }

    /**
     * Override update if you want to use the current value of the SVar.
     * This function is initially called once and then every time the value of the SVar changes.
     */
    //override def update(newValue: String) {if(component.text != newValue) component.text = newValue}

  }

  /**
   *  The name of this visualizer.
   *  This must not be unique.
   */
  //Todo: Name it!
  val name: String = "Simple String Setter"

}